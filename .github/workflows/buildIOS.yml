name: CI/CD-IOS for PR

# env:
#   MATCH_GIT_TOKEN: ${{ secrets.MATCH_FG_TOKEN }}

#   APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
#   APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
#   APPLE_ISSUER_ID: ${{ secrets.APPLE_TEAM_ID }}
#   APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
#   APPLE_KEY_ID: ${{ secrets.APPLE_KEY_ID }}
#   MATCH_PASSWORD: ${{secrets.MATCH_PASSWORD}}
#   ASC_JSON_KEY: ${{secrets.ASC_JSON_KEY}}
#   MATCH_GIT_BASIC_AUTHORIZATION: ${{secrets.MATCH_GIT_BASIC_AUTHORIZATION}}

on:
  pull_request:
    branches:
      - "main-test"
      - "main"
  push:
    branches:
      - "main"

permissions:
  contents: read
  actions: read

jobs:
  ios-build-and-deploy:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.18.0"

      - name: Install npm dependencies
        run: npm install

      - name: Install Pods for iOS dependencies
        run: |
          cd ios
          pod install

      # - uses: maxim-lobanov/setup-xcode@v1
      #   with:
      #     xcode-version: latest-stable

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true
          working-directory: ios

      - name: Install Bundler
        run: gem install bundler -v 2.4.22

      - name: Install gems
        run: |
          cd ios
          bundle install

      # - name: flutter setup
      #   uses: subosito/flutter-action@v2
      #   with:
      #     cache: true
      #   id: flutter

      # - name: Install CocoaPods
      #   run: |
      #     sudo gem install cocoapods

      #already done
      # - name: Install Fastlane
      #   run: |
      #     sudo gem install fastlane

      - name: Setup app store connect
        run: echo "${{ secrets.APP_STORE_JSON_SECRET }}"  >> ./ios/fastlane/store.json

      - name: Build and Deploy using Fastlane
        env:
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_FG_TOKEN }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.INDIVIDUAL_ID }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.INDIVIDUAL_CONTENT }}
          ASC_JSON_KEY: ${{ secrets.APP_STORE_JSON_SECRET }}
          #FASTLANE_PASSWORD: ${{secrets.PASSWORD}}
          #FASTLANE_SESSION: ${{secrets.FATLANE_SESSION}}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{secrets.APP_PASSWORD}}
          #FASTLANE_APPLE_APP_PASSWORD:s ${{secrets.FASTLANE_APPLE_APP_PASSWORD}}
        run: |
          cd ios
          bundle exec fastlane ios beta
      # - name: Build and Deploy
      #   env:
      #     APPLE_KEY_ID: ${{ secrets.APPLE_KEY_ID }}
      #     APPLE_ISSUER_ID: ${{ secrets.APPLE_ISSUER_ID }}
      #     APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
      #     APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      #     APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}

      #   run: |
      #     cd ios
      #     bundle exec fastlane build
      #lane

      # - name: Build iOS project
      #   run: |
      #     cd ios
      #     xcodebuild -workspace Ramses.xcworkspace -scheme "Ramses" -sdk iphoneos -configuration Release archive -archivePath $PWD/build/Ramses.xcarchive -allowProvisioningUpdates

      # - name: Export .ipa file
      #   run: |
      #     cd ios
      #     xcodebuild -exportArchive -archivePath $PWD/build/AppName.xcarchive -exportPath $PWD/build -exportOptionsPlist exportOptions.plist

      # - name: Authenticate with App Store Connect
      #   run: |
      #     echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" > ~/AuthKey.p8
      #   env:
      #     APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}

      # - name: Upload to TestFlight
      #   run: |
      #     xcrun altool --upload-app -f ios/build/AppName.ipa -t ios -u "${{ secrets.APPLE_APP_ID }}" -p "${{ secrets.APP_SPECIFIC_PASSWORD }}" --apiKey ${{ secrets.APPLE_KEY_ID }} --apiIssuer ${{ secrets.APPLE_ISSUER_ID }}
